// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: driver_licence.proto

package mobile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DriverLicenceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName     string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	ThirdName     string `protobuf:"bytes,4,opt,name=third_name,json=thirdName,proto3" json:"third_name,omitempty"`
	Address       string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	GotDate       string `protobuf:"bytes,6,opt,name=got_date,json=gotDate,proto3" json:"got_date,omitempty"`
	ExpDate       string `protobuf:"bytes,7,opt,name=exp_date,json=expDate,proto3" json:"exp_date,omitempty"`
	Category      string `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`
	GotAddress    string `protobuf:"bytes,9,opt,name=got_address,json=gotAddress,proto3" json:"got_address,omitempty"`
	LicenceNumber string `protobuf:"bytes,10,opt,name=licence_number,json=licenceNumber,proto3" json:"licence_number,omitempty"`
}

func (x *DriverLicenceRes) Reset() {
	*x = DriverLicenceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_licence_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLicenceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLicenceRes) ProtoMessage() {}

func (x *DriverLicenceRes) ProtoReflect() protoreflect.Message {
	mi := &file_driver_licence_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLicenceRes.ProtoReflect.Descriptor instead.
func (*DriverLicenceRes) Descriptor() ([]byte, []int) {
	return file_driver_licence_proto_rawDescGZIP(), []int{0}
}

func (x *DriverLicenceRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DriverLicenceRes) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DriverLicenceRes) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DriverLicenceRes) GetThirdName() string {
	if x != nil {
		return x.ThirdName
	}
	return ""
}

func (x *DriverLicenceRes) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DriverLicenceRes) GetGotDate() string {
	if x != nil {
		return x.GotDate
	}
	return ""
}

func (x *DriverLicenceRes) GetExpDate() string {
	if x != nil {
		return x.ExpDate
	}
	return ""
}

func (x *DriverLicenceRes) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DriverLicenceRes) GetGotAddress() string {
	if x != nil {
		return x.GotAddress
	}
	return ""
}

func (x *DriverLicenceRes) GetLicenceNumber() string {
	if x != nil {
		return x.LicenceNumber
	}
	return ""
}

type DriverLicenceCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName     string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	ThirdName     string `protobuf:"bytes,3,opt,name=third_name,json=thirdName,proto3" json:"third_name,omitempty"`
	Address       string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	GotDate       string `protobuf:"bytes,5,opt,name=got_date,json=gotDate,proto3" json:"got_date,omitempty"`
	ExpDate       string `protobuf:"bytes,6,opt,name=exp_date,json=expDate,proto3" json:"exp_date,omitempty"`
	Category      string `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	GotAddress    string `protobuf:"bytes,8,opt,name=got_address,json=gotAddress,proto3" json:"got_address,omitempty"`
	LicenceNumber string `protobuf:"bytes,9,opt,name=licence_number,json=licenceNumber,proto3" json:"licence_number,omitempty"`
}

func (x *DriverLicenceCreateReq) Reset() {
	*x = DriverLicenceCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_licence_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLicenceCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLicenceCreateReq) ProtoMessage() {}

func (x *DriverLicenceCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_driver_licence_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLicenceCreateReq.ProtoReflect.Descriptor instead.
func (*DriverLicenceCreateReq) Descriptor() ([]byte, []int) {
	return file_driver_licence_proto_rawDescGZIP(), []int{1}
}

func (x *DriverLicenceCreateReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetThirdName() string {
	if x != nil {
		return x.ThirdName
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetGotDate() string {
	if x != nil {
		return x.GotDate
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetExpDate() string {
	if x != nil {
		return x.ExpDate
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetGotAddress() string {
	if x != nil {
		return x.GotAddress
	}
	return ""
}

func (x *DriverLicenceCreateReq) GetLicenceNumber() string {
	if x != nil {
		return x.LicenceNumber
	}
	return ""
}

type DriverLicenceGetByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licence *DriverLicenceRes `protobuf:"bytes,1,opt,name=licence,proto3" json:"licence,omitempty"`
}

func (x *DriverLicenceGetByIdRes) Reset() {
	*x = DriverLicenceGetByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_licence_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLicenceGetByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLicenceGetByIdRes) ProtoMessage() {}

func (x *DriverLicenceGetByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_driver_licence_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLicenceGetByIdRes.ProtoReflect.Descriptor instead.
func (*DriverLicenceGetByIdRes) Descriptor() ([]byte, []int) {
	return file_driver_licence_proto_rawDescGZIP(), []int{2}
}

func (x *DriverLicenceGetByIdRes) GetLicence() *DriverLicenceRes {
	if x != nil {
		return x.Licence
	}
	return nil
}

type DriverLicenceGetAllRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Licences []*DriverLicenceRes `protobuf:"bytes,1,rep,name=licences,proto3" json:"licences,omitempty"`
}

func (x *DriverLicenceGetAllRes) Reset() {
	*x = DriverLicenceGetAllRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_licence_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLicenceGetAllRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLicenceGetAllRes) ProtoMessage() {}

func (x *DriverLicenceGetAllRes) ProtoReflect() protoreflect.Message {
	mi := &file_driver_licence_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLicenceGetAllRes.ProtoReflect.Descriptor instead.
func (*DriverLicenceGetAllRes) Descriptor() ([]byte, []int) {
	return file_driver_licence_proto_rawDescGZIP(), []int{3}
}

func (x *DriverLicenceGetAllRes) GetLicences() []*DriverLicenceRes {
	if x != nil {
		return x.Licences
	}
	return nil
}

type DriverLicenceGetAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter   *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Category string  `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	ExpAt    string  `protobuf:"bytes,3,opt,name=exp_at,json=expAt,proto3" json:"exp_at,omitempty"`
}

func (x *DriverLicenceGetAllReq) Reset() {
	*x = DriverLicenceGetAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_driver_licence_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverLicenceGetAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverLicenceGetAllReq) ProtoMessage() {}

func (x *DriverLicenceGetAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_driver_licence_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverLicenceGetAllReq.ProtoReflect.Descriptor instead.
func (*DriverLicenceGetAllReq) Descriptor() ([]byte, []int) {
	return file_driver_licence_proto_rawDescGZIP(), []int{4}
}

func (x *DriverLicenceGetAllReq) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DriverLicenceGetAllReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DriverLicenceGetAllReq) GetExpAt() string {
	if x != nil {
		return x.ExpAt
	}
	return ""
}

var File_driver_licence_proto protoreflect.FileDescriptor

var file_driver_licence_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02,
	0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x67, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xa7, 0x02, 0x0a, 0x16, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x17, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x16, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x70, 0x41, 0x74, 0x32,
	0xf8, 0x01, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0c, 0x2e, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x1f, 0x2e, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c,
	0x2e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_driver_licence_proto_rawDescOnce sync.Once
	file_driver_licence_proto_rawDescData = file_driver_licence_proto_rawDesc
)

func file_driver_licence_proto_rawDescGZIP() []byte {
	file_driver_licence_proto_rawDescOnce.Do(func() {
		file_driver_licence_proto_rawDescData = protoimpl.X.CompressGZIP(file_driver_licence_proto_rawDescData)
	})
	return file_driver_licence_proto_rawDescData
}

var file_driver_licence_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_driver_licence_proto_goTypes = []interface{}{
	(*DriverLicenceRes)(nil),        // 0: mobile.DriverLicenceRes
	(*DriverLicenceCreateReq)(nil),  // 1: mobile.DriverLicenceCreateReq
	(*DriverLicenceGetByIdRes)(nil), // 2: mobile.DriverLicenceGetByIdRes
	(*DriverLicenceGetAllRes)(nil),  // 3: mobile.DriverLicenceGetAllRes
	(*DriverLicenceGetAllReq)(nil),  // 4: mobile.DriverLicenceGetAllReq
	(*Filter)(nil),                  // 5: mobile.Filter
	(*ById)(nil),                    // 6: mobile.ById
	(*Void)(nil),                    // 7: mobile.Void
}
var file_driver_licence_proto_depIdxs = []int32{
	0, // 0: mobile.DriverLicenceGetByIdRes.licence:type_name -> mobile.DriverLicenceRes
	0, // 1: mobile.DriverLicenceGetAllRes.licences:type_name -> mobile.DriverLicenceRes
	5, // 2: mobile.DriverLicenceGetAllReq.filter:type_name -> mobile.Filter
	1, // 3: mobile.DriverLicenceService.Create:input_type -> mobile.DriverLicenceCreateReq
	6, // 4: mobile.DriverLicenceService.GetById:input_type -> mobile.ById
	4, // 5: mobile.DriverLicenceService.GetAll:input_type -> mobile.DriverLicenceGetAllReq
	6, // 6: mobile.DriverLicenceService.Delete:input_type -> mobile.ById
	7, // 7: mobile.DriverLicenceService.Create:output_type -> mobile.Void
	2, // 8: mobile.DriverLicenceService.GetById:output_type -> mobile.DriverLicenceGetByIdRes
	3, // 9: mobile.DriverLicenceService.GetAll:output_type -> mobile.DriverLicenceGetAllRes
	7, // 10: mobile.DriverLicenceService.Delete:output_type -> mobile.Void
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_driver_licence_proto_init() }
func file_driver_licence_proto_init() {
	if File_driver_licence_proto != nil {
		return
	}
	file_common2_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_driver_licence_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLicenceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_driver_licence_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLicenceCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_driver_licence_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLicenceGetByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_driver_licence_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLicenceGetAllRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_driver_licence_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverLicenceGetAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_driver_licence_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_driver_licence_proto_goTypes,
		DependencyIndexes: file_driver_licence_proto_depIdxs,
		MessageInfos:      file_driver_licence_proto_msgTypes,
	}.Build()
	File_driver_licence_proto = out.File
	file_driver_licence_proto_rawDesc = nil
	file_driver_licence_proto_goTypes = nil
	file_driver_licence_proto_depIdxs = nil
}
